import java.util.ArrayList;
import java.util.Collections;

public class Main {
    public static void main(String[] args) {
        // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —Å–ø–∏—Å–æ–∫, –¥–æ–¥–∞—î–º–æ –∫—ñ–ª—å–∫–∞ –Ω–∞–∑–≤ —Ä–∏–± —ñ –≤–∏–≤–æ–¥–∏–º–æ –∫–æ–ª–µ–∫—Ü—ñ—é üêü
        ArrayList<String> fishList = new ArrayList<>();
        fishList.add("–õ–æ—Å–æ—Å—å");
        fishList.add("–§–æ—Ä–µ–ª—å");
        fishList.add("–û–∫—É–Ω—å");
        fishList.add("–°–æ–º");
        fishList.add("–ú–∞–∫—Ä–µ–ª—å");
        System.out.println("–°–ø–∏—Å–æ–∫ —Ä–∏–±: " + fishList);

        // 2. –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç–∞—Ö —É —Å–ø–∏—Å–∫—É üîÑ
        System.out.println("–Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ —Å–ø–∏—Å–∫—É:");
        for (String fish : fishList) {
            System.out.println(fish);
        }

        // 3. –í—Å—Ç–∞–≤–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–æ–∫ –Ω–∞ –ø–µ—Ä—à–µ –º—ñ—Å—Ü–µ ‚ú®
        fishList.add(0, "–©—É–∫–∞");
        System.out.println("–ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —â—É–∫–∏ –Ω–∞ –ø–µ—Ä—à–µ –º—ñ—Å—Ü–µ: " + fishList);

        // 4. –í–∏—Ç—è–≥—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –∑–∞–¥–∞–Ω–∏–º —ñ–Ω–¥–µ–∫—Å–æ–º –∑—ñ —Å–ø–∏—Å–∫—É üìç
        String retrievedFish = fishList.get(2); // –û—Ç—Ä–∏–º—É—î–º–æ —Ä–∏–±—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º 2
        System.out.println("–í–∏—Ç—è–≥–Ω–µ–Ω–∞ —Ä–∏–±–∞ –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º 2: " + retrievedFish);

        // 5. –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–∫—É üîÑ
        fishList.set(3, "–ú–µ—á-—Ä–∏–±–∞"); // –ó–º—ñ–Ω—é—î–º–æ —Ä–∏–±—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º 3
        System.out.println("–ü—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–∏–±–∏ –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º 3: " + fishList);

        // 6. –í–∏–¥–∞–ª—è—î–º–æ —Ç—Ä–µ—Ç—ñ–π –µ–ª–µ–º–µ–Ω—Ç –∑—ñ —Å–ø–∏—Å–∫—É ‚ùå
        fishList.remove(2); // –í–∏–¥–∞–ª—è—î–º–æ —Ä–∏–±—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º 2
        System.out.println("–ü—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç—Ä–µ—Ç—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞: " + fishList);

        // 7. –®—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–∫—É üîç
        boolean containsBass = fishList.contains("–û–∫—É–Ω—å");
        System.out.println("–ß–∏ –º—ñ—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–∫—É–Ω—è? " + containsBass);

        // 8. –°–æ—Ä—Ç—É—î–º–æ –¥–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ üìä
        Collections.sort(fishList);
        System.out.println("–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + fishList);

        // 9. –ö–æ–ø—ñ—é—î–º–æ –æ–¥–∏–Ω —Å–ø–∏—Å–æ–∫ –≤ —ñ–Ω—à–∏–π üìë
        ArrayList<String> copyFishList = new ArrayList<>(fishList);
        System.out.println("–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + copyFishList);

        // 10. –ó–º—ñ–Ω—é—î–º–æ –ø–æ—Ä—è–¥–æ–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É —Å–ø–∏—Å–∫—É üîÑ
        Collections.reverse(fishList);
        System.out.println("–ó–º—ñ–Ω–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + fishList);

        // 11. –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –¥–≤–∞ —Å–ø–∏—Å–∫–∏ ‚öñÔ∏è
        boolean areListsEqual = fishList.equals(copyFishList);
        System.out.println("–ß–∏ —Ä—ñ–≤–Ω—ñ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —ñ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–∫–∏? " + areListsEqual);

        // 12. –û—á–∏—â–∞—î–º–æ —Å–ø–∏—Å–æ–∫ üßπ
        fishList.clear();
        System.out.println("–ü—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É, —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + fishList);

        // 13. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—É—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫ —á–∏ –Ω—ñ üßê
        boolean isEmpty = fishList.isEmpty();
        System.out.println("–ß–∏ –ø—É—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∏–±? " + isEmpty);

        // 14. –ó–±—ñ–ª—å—à—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —Å–ø–∏—Å–∫—É üìà
        for (int i = 0; i < 10; i++) {
            fishList.add("–†–∏–±–∞ " + (i + 1)); // –î–æ–¥–∞—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É
        }
        System.out.println("–ü—ñ—Å–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É, —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + fishList);

        // 15. –ó–º–µ–Ω—à—É—î–º–æ —î–º–Ω—ñ—Å—Ç—å —Å–ø–∏—Å–∫—É –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É üìè
        ArrayList<String> trimmedFishList = new ArrayList<>(fishList);
        System.out.println("–ó–º–µ–Ω—à–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∏–±: " + trimmedFishList);
    }
}
